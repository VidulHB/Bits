<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BITS '25 | Login</title>
    <link rel="icon" type="image/x-icon" href="./img/bits-logo.png">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
    <link rel="stylesheet" href="/css/form.css">
</head>
<body>
<%- include("partials/nav", {active: "", user: username}) %>

<main class="main">
    <section class="form">
        <form id="login-form" name="login">
            <div class="form-title">
                <h4>Login for BITS '25</h4>
            </div>
            <div class="form-input-err">
                <p id="form-err">Oh look, you just found a bug :/</p>
            </div>
            <div class="form-input-field">
                <input name="email" type="text" placeholder="example@email.com" required>
                <label for="email"><i class="fa-solid fa-envelope"></i> Email</label>
            </div>
            <div class="form-input-field">
                <label for="password"><i class="fa-solid fa-asterisk"></i> Password</label>
                <input name="password" type="password" placeholder="Password" required>
            </div>
            <div class="form-input-submit">
                <button id="form-submit-btn" type="submit">Login</button>
            </div>
            <div class="form-links">
                <a href="/signup">New to BITS? <span>Register</span></a>
                <a style="visibility: hidden;" href="/forgetpass">Forgot password? <span>Reset</span></a>
            </div>
        </form>
    </section>

    <%- include("partials/form_compinfo") %>
</main>

<script>
    // form submittion
    const showError = (msg, highlighted = false) => {
        document.querySelector("#form-err").textContent = msg
        document.querySelector(".form-input-err").classList.add("form-err-show")
        if (highlighted) {
            document.querySelector(`input[name=${highlighted}]`).classList.add("input-invalid")
        }
    }

    const formSubmit = (status = "") => {
        document.querySelectorAll("input").forEach((el) => {
            el.classList.remove("input-invalid")
        })
        document.querySelector(".form-input-err").classList.remove("form-err-show")

        if (status == "passwordIncorrect") {
            showError("Incorrect Password", "password")
        } else if (status == "emailUnregistered") {
            showError("Email is not registered", "email")
        }
    }

    const login = (data) => {
        fetch("/login", {
            method: "POST",
            headers: {
                "content-type": "application/json",
            },
            body: JSON.stringify(data)
        }).then((res) => {
            if (res.status == 200) {
                formSubmit()
                window.location.href = "/tasks"
            } else if (res.status == 401) {
                res.json().then((data) => {
                    if (data.message == "password incorrect") {
                        formSubmit("passwordIncorrect")
                    } else if (data.message == "email unregistered") {
                        formSubmit("emailUnregistered")
                    }
                })
            } else {
                console.log("Error has occured :( [Invalid response from the server]")
            }
        })
    }

    document.querySelector("#login-form").addEventListener("submit", (e) => {
        e.preventDefault()
        const data = Object.fromEntries(new FormData(e.target).entries())
        login(data)
    })
</script>
<script>

    var INITIAL_WAIT = 3000;
    var INTERVAL_WAIT = 10000;
    var ONE_SECOND = 1000;

    var events = ["mouseup", "keydown", "scroll", "mousemove"];
    var startTime = Date.now();
    var endTime = startTime + INITIAL_WAIT;
    var totalTime = 0;
    var clickCount = 0;
    var buttonClicks = {
        total: 0,
    };
    var buttonClickCount = 0;
    var linkClickCount = 0;
    var keypressCount = 0;
    var scrollCount = 0;
    var mouseMovementCount = 0;
    var linkClickCount = 0;

    setInterval(function () {
        if (!document.hidden && startTime <= endTime) {
            startTime = Date.now();
            totalTime += ONE_SECOND;
        }
    }, ONE_SECOND);

    document.addEventListener("DOMContentLoaded", function () {
        events.forEach(function (e) {
            document.addEventListener(e, function () {
                endTime = Date.now() + INTERVAL_WAIT;
                if (e === "mouseup") {
                    clickCount++;
                    if (event.target.nodeName === 'BUTTON') {
                        if (!buttonClicks[event.target.innerText]) {
                            buttonClicks[event.target.innerText] = 0;
                        }
                        buttonClicks[event.target.innerText] += 1;
                        buttonClicks.total += 1;
                    } else if (event.target.nodeName === 'A') {
                        linkClickCount++;
                    }
                } else if (e === "keydown") {
                    keypressCount++;
                } else if (e === "scroll") {
                    scrollCount++;
                } else if (e === "mousemove") {
                    mouseMovementCount++;
                }
            });
        });
    });

    window.addEventListener('beforeunload', function (e) {
        const data = {
            timeSpend: totalTime,
            totalClicks: clickCount,
            totalButtonClicks: buttonClicks,
            totalButtonClickCount: buttonClickCount,
            totalLinkClickCount: linkClickCount,
            totalKeypressCount: keypressCount,
            totalScrollCount: scrollCount,
            totalMouseMovementCount: mouseMovementCount
        };

        fetch('/update', {
            method: 'POST', // or 'PUT'
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((data) => {
                console.log('Success:', data);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    });
</script>
</body>
</html>
