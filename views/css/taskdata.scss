@use "sass:meta";
@import "./main";

.main {
    width: 100%;
    padding: 4em 6em 0 6em;
    min-height: 88vh;
}

.task-search {
    display: flex;
    justify-content: center;
    // padding: 2em 0;
    margin-bottom: 5em;
    font-size: 1em;

    .searchbar {
        position: relative;
        background-color: $col-ti-bg;
        border-radius: 16px;

        display: flex;
        flex-direction: row;
        align-items: center;

        .searchbar-icon {
            padding: 0 1.5em;
            color: $col-acnt-light;
        }

        input {
            font-size: inherit;
            // font-style: italic;
            color: $col-ti-desc;
            width: 35vw;
            padding: .8em 1.5em .8em 0;
            border-radius: 0 8px 8px 0;
            background-color: transparent;
            border: none;
            outline: none;

            &::placeholder {
                font-style: italic;
                color: $col-sb-placeholder;
            }
        }

        .task-filter-cat {
            background-color: transparent;
            border: none;
            border-left: 1px solid $col-sb-div;
            color: $col-light;
            height: 100%;
            border-radius: 0 8px 8px 0;
            padding: .8em 1.5em;
            font-size: 1em;
            transition: .15s;
            cursor: pointer;

            i { 
                color: $col-acnt-light;
                margin-right: .4em;
            }
            p { transition: inherit; }

            &:hover p { transform: scale(1.1); }
            &:active p { transform: scale(.9); }
        }

        .task-filter-cat-popup {
            position: absolute;
            top: 100%;
            right: 0;
            // width: 8em;
            // height: 10em;
            margin-top: 1em;

            // background-color: $col-ti-bg;
            color: $col-light;
            border-radius: 16px;

            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-evenly;
            gap: 1em;
            
            @keyframes popup {
                from {
                    opacity: 0;
                    transform: scale(0);
                }
                to {
                    opacity: 1;
                    transform: scale(1);
                }
            }
            
            opacity: 0;
            transform-origin: top center;
            animation: popup .15s forwards;

            &.tf-cat-hidden {
                display: none;
            }

            .tf-cat-option {
                background: $col-ti-bg;
                color: inherit;
                font-size: 1em;
                border: none;
                border-radius: 16px;
                width: 100%;
                padding: 1em 1.5em;
                transition: .2s;
                cursor: pointer;

                p { transition: inherit; }
                i { margin-right: .5em; }

                &:hover {
                    color: $col-mid;
                    transform: scale(1.1);
                }
                &:active {
                    transform: scale(.9);
                }
                
                &.tf-cat-active {
                    background: $col-acnt-mid linear-gradient(110deg, $col-acnt-light 0%, $col-acnt-dark 100%);
                }
            }
        }
    }
}

.tasks {
    display: flex;
    flex-direction: row;

    .task-list {
        display: flex;
        flex-direction: column;
        gap: 3em;
        width: 60%;
    }
    
    .task-item {
        position: relative;
        background-color: $col-ti-bg;
        border-radius: 24px;
        padding: 2.2em 3em;
        margin: 0 2em;
        overflow: hidden;

        // margin-bottom: 3em; // NOTE: Do NOT use gap in .task-list since it breaks the task-filter animation 

        // // opacity: 0;
        // // transform: scale(.8);
        // transition: .2s;

        // &.task-filtered {
        //     opacity: 1;
        //     transform: scale(1);
        // }

        &.task-filtered-search, &.task-filtered-cat, &.task-filtered-status {
            display: none;
        }

        .ti-bg-acnt {
            position: absolute;
            width: 0;
            height: 0;
            box-shadow: 0 0 300px 60px $col-acnt-mid;
        }

        .tibg-tr {
            top: 0;
            right: 5em;
        }

        .tibg-bl {
            bottom: 0;
            left: 5em;
        }

        .ti-info {
            margin-bottom: 2.5em;
            width: 80%;

            h4 {
                color: $col-light;
                font-size: 1.3em;
                margin-bottom: 1.0em;
            }

            p {
                color: $col-ti-desc;
                font-size: 1.0em;
                height: 3em; // fontsize * 1.5 lineheight * 2 lines
            }
        }

        .ti-cta {
            background: linear-gradient(110deg, $col-acnt-light 0%, $col-acnt-dark 100%);
            color: $col-light;
            display: inline-block;
            // padding: .7em 2.5em;
            border-radius: 8px;
            font-size: 1em;
            font-weight: bold;
            // box-shadow: 10px 0 80px 2px $col-acnt-dark, -10px 0 80px 2px $col-acnt-light;
            transition: .15s;
            user-select: none;
            cursor: pointer;

            a {
                display: block;
                padding: .7em 1.8em;
            }

            &:hover {
                transform: scale(1.1);
                // box-shadow: 10px 2px 80px 0px $col-acnt-dark, -10px 2px 80px 0px $col-acnt-light;
            }

            &:active {
                transform: scale(.9);
            }
        }

        .ti-type {
            position: absolute;
            top: 1.5em;
            right: 1.5em;
            padding: 0 1em;
            border-radius: 12px;
            background-color: $col-ti-tag;
            color: $col-light;

            display: flex;
            flex-direction: row;
            align-items: center;

            div {
                display: flex;
                align-items: center;
            }

            i {
                font-size: .8em;
            }

            .tity-divider {
                background-color: $col-mid;
                width: 1px;
                height: 1.7em;
                margin: 0 .5em;
            }   
        }

        .ti-status {
            position: absolute;
            right: 0;
            bottom: 2.5em;
            padding: .4em 2em;
            width: 115px;
            border-radius: 100px 0 0 100px;
            font-size: .8em;
            color: $col-light;
            display: none;

            transition: .2s;

            &.ts-red {
                background: linear-gradient(110deg, $gradient-red...);
                box-shadow: 0 0 300px 10px $col-red-dark;
                display: initial;
            }
            &.ts-green {
                background: linear-gradient(110deg, $gradient-green...);
                box-shadow: 0 0 300px 10px $col-green-dark;
                display: initial;
            }
            &.ts-yellow {
                background: linear-gradient(110deg, $gradient-yellow...);
                box-shadow: 0 0 300px 10px $col-yellow-dark;
                display: initial;
            }
        }
    }

    .task-filter {
        width: 40%;
    }

    .tf-list {
        width: max-content;
        margin-left: auto;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        gap: .5em;
        font-size: 1.1em;
        
        // background-color: #00ffeaa8;
        
        .tf-item {
            padding: .6em 3em .6em 1em;
            border-radius: 8px;
            transition: .2s;
            cursor: pointer;
            user-select: none;

            &:hover {
                transform: scale(1.1);
            }
            
            &:active {
                transform: scale(.9);
            }

            // fancier way of writing the repetitive .tf-COLOR code (for filter menu/side bar)
            @mixin tf-filters($args...) {
            @each $name, $cols in meta.keywords($args) {
                &.tf-#{$name} {
                    p {
                        @include gradientText($cols...);    
                    }
                    &.tf-active{
                        background: linear-gradient(110deg, $cols...);
                        p {
                            color: $col-light;
                        }
                    }
                }
            } }

            @include tf-filters(
                $blue: ($col-acnt-light, $col-acnt-dark),
                $green: $gradient-green,
                $red: $gradient-red,
                $yellow: $gradient-yellow
            )

        }
    }

}


@media screen and (max-width: 1024px) {
    .main {
        .task-search {
            .searchbar {
                flex: 1;
                input {
                    flex: 1;
                }
            }
        }

        .tasks {
            flex-direction: column-reverse;
            gap: 2em;

            .task-list {
                width: 100%;
            }

            .task-filter {
                width: 100%;
                
                .tf-list {
                    width: auto;
                    text-align: center;

                    .tf-item {
                        padding: .6em 0;
                    }
                }
            }

            .task-item {
                margin: 0;
            }
        }
    }
}

@media screen and (max-width: 768px) {
    .main {
        padding: 4em 2em 0 2em;

        .tasks {
            .task-item {
                padding: 1.6em 2em;
            }
        }
    }
}